{"version":3,"sources":["Home.js","Weather.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Day","props","period","name","temperature","temperatureUnit","shortForecast","detailedForecast","Weather","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","forecast","error","loadWeather","_this2","fetch","then","response","ok","json","Promise","reject","weatherData","setState","properties","catch","content","periods","map","key","number","React","Component","Button","type","id","concat","value","onClick","e","Calculator","displayValue","leftOperand","operator","shouldClearDisplay","handleNumber","bind","assertThisInitialized","handleOperator","handleEquals","handleClear","handleSignChange","handlePercentage","newDisplayValue","currentDisplayValue","parseFloat","startsWith","slice","result","rightOperand","App","BrowserRouter","Link","to","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e6eecdb.chunk.js","sourcesContent":["import React from 'react';\n\nexport default () => (\n  <div className=\"container mt-3\">\n    <div className=\"row\">\n      <div className=\"col\">\n        <h1>Welcome to my React Plaground</h1>\n        <p>Click the links on the left to explore</p>\n      </div>\n    </div>\n  </div>\n)","import React from 'react';\n\nfunction Day(props) {\n  return (\n    <div className=\"card mb-1\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{props.period.name}</h5>\n        <h6 className=\"card-subtitle mb-2 text-muted\">\n          <span>{props.period.temperature}Â°{props.period.temperatureUnit}</span> <span>{props.period.shortForecast}</span>\n        </h6>\n        <p className=\"card-text\">{props.period.detailedForecast}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default class Weather extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      forecast: null,\n      error: null\n    }\n    this.loadWeather()\n  }\n\n  loadWeather() {\n    fetch('https://api.weather.gov/gridpoints/IND/57,68/forecast')\n      .then(response => {\n        if(response.ok) {\n          return response.json()\n        } else {\n          return Promise.reject(response);\n        }\n      })\n      .then(weatherData => this.setState({forecast: weatherData.properties}))\n      .catch(error => this.setState({error: 'Error loading weather data'}));\n  }\n\n  render() {\n\n    let content;\n\n    if(this.state.error) {\n      content = <div>{this.state.error}</div>\n    } else if(!this.state.forecast) {\n      content = <div>Loading</div>\n    } else {\n      content = (\n        <div>\n          { this.state.forecast.periods.map(period => {\n            return <Day period={period} key={period.number}/>\n          }) }\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <h1 className=\"m-3\">Weather Forecast for Indianapolis, IN</h1>\n        { content }\n      </div>\n    )\n  }\n}","import React from 'react';\nimport './Calculator.css';\n\nfunction Button(props) {\n  return <button\n    type='button'\n    className='btn btn-light bprder border-dark m-2'  \n    id={`button${props.value}`} \n    onClick={(e) => props.onClick(props.value)}>\n    {props.value}\n    </button>\n}\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      displayValue: '0',\n      leftOperand: null,\n      operator: null,\n      shouldClearDisplay: true\n    }\n    this.handleNumber = this.handleNumber.bind(this);\n    this.handleOperator = this.handleOperator.bind(this);\n    this.handleEquals = this.handleEquals.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleSignChange = this.handleSignChange.bind(this);\n    this.handlePercentage = this.handlePercentage.bind(this);\n  }\n  \n  handleNumber(value) {\n    let currentDisplayValue = this.state.displayValue;\n    let newDisplayValue;\n    \n    if(this.state.shouldClearDisplay) {\n      newDisplayValue = value;\n    } else {\n      newDisplayValue = `${currentDisplayValue}${value}`; \n    }\n    \n    this.setState({\n      displayValue: newDisplayValue,\n      shouldClearDisplay: false\n    });\n  }\n  \n  handleOperator(value) {\n    this.setState({\n      leftOperand: parseFloat(this.state.displayValue),\n      operator: value,\n      shouldClearDisplay: true\n    });\n  }\n  \n  handleClear() {\n    this.setState({\n      leftOperand: null,\n      operator: null,\n      displayValue: '0',\n      shouldClearDisplay: true\n    });\n  }\n  \n  handleSignChange() {\n    let currentDisplayValue = this.state.displayValue;\n    let newDisplayValue = currentDisplayValue;\n\n    if(currentDisplayValue.startsWith('-')) {\n      newDisplayValue = currentDisplayValue.slice(1);\n    } else if (currentDisplayValue !== '0') {\n      newDisplayValue = `-${currentDisplayValue}`;\n    }\n\n    this.setState({\n      displayValue: newDisplayValue,\n      leftOperand: -1 * this.state.leftOperand\n    }); \n  }\n  \n  handlePercentage() {\n    this.setState({\n      displayValue: parseFloat(this.state.displayValue) / 100,\n      leftOperand: parseFloat(this.state.displayValue) / 100\n    });\n  }\n  \n  handleEquals() {\n    let operator = this.state.operator;\n    let leftOperand = this.state.leftOperand;\n    let rightOperand = parseFloat(this.state.displayValue);\n    let result;\n    \n    if (operator === '+') {\n      result = leftOperand + rightOperand;\n    } else if (operator === '-') {\n      result = leftOperand - rightOperand;\n    } else if (operator === '*') {\n      result = leftOperand * rightOperand;\n    } else if (operator === '/') {\n      result = leftOperand / rightOperand;\n    }\n    \n    this.setState({\n      displayValue: result,\n      leftOperand: result,\n      shouldClearDisplay: true\n    });\n  }\n  \n  render() {\n\n    return (\n      <div>\n        <div className=\"calculator m-4 border border-dark rounded p-4 bg-light\">\n          <div className=\"displayValue border border-dark rounded bg-white p-4 mb-4\">{this.state.displayValue}</div>\n          <div>\n            <Button onClick={this.handleClear} value={'C'} />\n            <Button onClick={this.handleSignChange} value={'+/-'} />\n            <Button onClick={this.handlePercentage} value={'%'} />\n            <Button onClick={this.handleOperator} value={'/'} />\n          </div>\n          <div>\n            <Button onClick={this.handleNumber} value={'7'} />\n            <Button onClick={this.handleNumber} value={'8'} />\n            <Button onClick={this.handleNumber} value={'9'} />\n            <Button onClick={this.handleOperator} value={'*'} />\n          </div>\n          <div>\n            <Button onClick={this.handleNumber} value={'4'} />\n            <Button onClick={this.handleNumber} value={'5'} />\n            <Button onClick={this.handleNumber} value={'6'} />\n            <Button onClick={this.handleOperator} value={'+'} />\n          </div>\n          <div>\n            <Button onClick={this.handleNumber} value={'1'} />\n            <Button onClick={this.handleNumber} value={'2'} />\n            <Button onClick={this.handleNumber} value={'3'} />\n            <Button onClick={this.handleOperator} value={'-'} />\n          </div>\n          <div>\n            <Button onClick={this.handleNumber} className=\"zero\" value={'0'} />\n            <Button onClick={this.handleNumber} value={'.'} />\n            <Button onClick={this.handleEquals} value={'='} />\n          </div>  \n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Home from './Home';\nimport Weather from './Weather';\nimport Calculator from './Calculator';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div>\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n          <Link className=\"navbar-brand\" to=\"/\">React Playground</Link>\n        </nav>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-2 bg-light min-vh-100\">\n              <ul className=\"nav flex-column mt-3\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link active text-dark\" to=\"/weather\">Weather</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link active text-dark\" to=\"/calculator\">Calculator</Link>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-10\">\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/weather\" component={Weather} />\n              <Route path=\"/calculator\" component={Calculator} />\n            </div>\n          </div>\n        </div>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}